# Production Docker Compose Override
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  postgres:
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_production_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Remove port exposure for production
    ports: []
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  redis:
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-secure_redis_password}
    # Remove port exposure for production
    ports: []
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  backend:
    environment:
      ENVIRONMENT: production
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: postgresql+asyncpg://postgres:${DB_PASSWORD:-secure_production_password}@postgres:5432/zorel_leather
      REDIS_URL: redis://:${REDIS_PASSWORD:-secure_redis_password}@redis:6379
      CORS_ORIGINS: ${CORS_ORIGINS:-["https://yourdomain.com"]}
      FRONTEND_URL: ${FRONTEND_URL:-https://yourdomain.com}
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Remove port exposure - use nginx proxy
    ports: []

  frontend:
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://api.yourdomain.com}
      NEXT_PUBLIC_BACKEND_URL: http://backend:8000
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Remove port exposure - use nginx proxy
    ports: []

  nginx:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

# Production volumes with specific drivers
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/zorel_postgres_data
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
